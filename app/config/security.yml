# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        IlCleme\UserBundle\Entity\User:
            algorithm: bcrypt

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: IlClemeUserBundle:User
                # property: username !!! commentando questa riga symfony non fa la query automaticamente ma usa il metodo loadUserByUsername() della UserRepository
                # if you're using multiple entity managers
                # manager_name: customer

        administrators:
            entity: { class: IlClemeUserBundle:User }
        
        apiprovider:
            id: fornitore_utenti_apikey

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        secured_area: # questo firewall controlla tutte le richieste che inizia per /hello
            pattern: ^/hello
            stateless: false
            simple_preauth:
                authenticator: autenticatore_apikey
            logout:
                path:   /logout
                target: /login

        main:
            #pattern:    ^/
            anonymous: ~
            provider: our_db_provider
            form_login:
                login_path: login_route
                check_path: login_route
            logout:
                path:   /logout
                target: /

        default:
            anonymous: ~

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }